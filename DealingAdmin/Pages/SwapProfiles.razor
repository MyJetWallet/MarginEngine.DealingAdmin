@page "/SwapProfiles"

@using AntDesign.TableModels
@using System.Text.Json
@using DealingAdmin.Abstractions.Models
@using DealingAdmin.Shared.Services
@using SimpleTrading.Abstraction.Trading.Swaps

@inject ISwapProfileWriter SwapProfileWriter;

<PageHeader Class="m-0 p-0" Title="Swap Profiles">
    <PageHeaderExtra>
        <AntDesign.Button OnClick="ShowNewProfileDialog" Type="@AntDesign.ButtonType.Primary">New Profile</AntDesign.Button>
    </PageHeaderExtra>
</PageHeader>

<Table DataSource="@swapGroupProfiles"
       TItem="SwapGroupProfile"
       Bordered="@true"
       Total="0"
       HidePagination="@true"
       ScrollY="calc(100vh - 120px)"
       PageSize="999">
    <RowTemplate>           
        <AntDesign.Column Title="Profile Id"
                DataIndex="ProfileId"
                TData="string"
                Sortable
                Width="200"/>
        <AntDesign.Column Title="Instruments"
                TData="string">
            @foreach (var instrument in context.Instruments)
            {
                <Tag PresetColor="PresetColor.Purple">@instrument.Id</Tag>
            }
        </AntDesign.Column>    
        <ActionColumn Title="Edit" Width="60">
                <a><i @onclick="()=>ShowEditProfileDialog(context)"
                    class="material-icons color-primary">edit</i></a>
        </ActionColumn>
    </RowTemplate>
</Table>


@code {
    private List<SwapGroupProfile> swapGroupProfiles = new List<SwapGroupProfile>();

    int _pageSize = 999;

    private bool isUpdateProfileDialogVisible = false;

    private SwapGroupProfile editedProfile;
    private string profileEditFormTitle;
    private bool isEditInstrumentDialogVisible;

    protected override async Task OnInitializedAsync()
    {
        var swapProfiles = (await SwapProfileWriter.GetAllAsync()).Select(SwapProfileModel.Create);
        var profilesGroupDictionary = new Dictionary<string, List<SwapProfileModel>>();

        foreach(var item in swapProfiles)
        {
            if (!profilesGroupDictionary.ContainsKey(item.Id))
            {
                profilesGroupDictionary.Add(item.Id, new List<SwapProfileModel>());
            }

            profilesGroupDictionary[item.Id].Add(item);
        }

        foreach(var group in profilesGroupDictionary)
        {
            swapGroupProfiles.Add(new SwapGroupProfile
                {
                    ProfileId = group.Key,
                    Instruments = group.Value
                });
        }
    }

    private void ShowNewProfileDialog()
    {
        profileEditFormTitle = "Add New Profile";
        editedProfile = new SwapGroupProfile
            {
                ProfileId = "",
                Instruments = new List<SwapProfileModel>()
            };
        isEditInstrumentDialogVisible = true;
    }

    private void ShowEditProfileDialog(SwapGroupProfile groupProfile)
    {
        profileEditFormTitle = $"Edit '{groupProfile.ProfileId}' Profile";
        editedProfile = new SwapGroupProfile
            {
                ProfileId = "",
                Instruments = new List<SwapProfileModel>()
            };
        isEditInstrumentDialogVisible = true;
    }

    private void CloseEditProfileDialog()
    {
        isEditInstrumentDialogVisible = false;
        editedProfile = new SwapGroupProfile
            {
                ProfileId = "",
                Instruments = new List<SwapProfileModel>()
            };
    }
}