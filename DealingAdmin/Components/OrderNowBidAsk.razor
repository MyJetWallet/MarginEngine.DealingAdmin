@using DealingAdmin.Abstractions
@using DealingAdmin.Abstractions.Models
@using DealingAdmin.Shared.Services

@inject IPriceRetriever priceRetriever

<div style="font-family:courier">
    <div>Ask: @ask.ToString($"F{Digits}")</div>
    <div>Bid: @bid.ToString($"F{Digits}")</div>
    <div>Spread: @spread.ToString("F0")</div>
</div>

@code {
    [Parameter]
    public BidAskModel BidAsk { get; set; }

    [Parameter]
    public int Digits { get; set; }

    private double ask;
    private double bid;
    private double spread;

    private bool isUpdating = false;

    protected override async Task OnInitializedAsync()
    {
        ask = BidAsk.Ask;
        bid = BidAsk.Bid;
        spread = FxUtils.CalcSpread(BidAsk, Digits);

        AppJobService.PriceUpdateEvent += async () => await InvokeAsync(() => UpdateBidAsk());
    }

    private void UpdateBidAsk()
    {
        if (isUpdating)
        {
            return;
        }

        isUpdating = true;

        var currentBidAsk = priceRetriever.GetBidAsk(BidAsk.Id);

        if (currentBidAsk != null)
        {
            SetBidAsk(currentBidAsk);
        }

        isUpdating = false;      
    }

    public void SetBidAsk(BidAskModel bidAsk)
    {
        ask = bidAsk.Ask;
        bid = bidAsk.Bid;
        spread = FxUtils.CalcSpread(bidAsk, Digits);
        this.StateHasChanged();
    }
}
